<div id="menu-display" class="menu-display" data-branch-id="{{ branch_id }}">
  <h2>{{ 'menu.title' | t }}</h2>

  <div class="menu-categories">
    {% for category in menu_categories %}
      <div class="menu-category">
        <h3>{{ category.title }}</h3>

        <div class="menu-items">
          {% for item in category.items %}
            <div class="menu-item" data-item-id="{{ item.id }}">
              {% if item.image %}
                <div class="menu-item-image">
                  <img src="{{ item.image | img_url: '200x200', crop: 'center' }}" alt="{{ item.title }}">
                </div>
              {% endif %}

              <div class="menu-item-details">
                <h4>{{ item.title }}</h4>
                <p class="menu-item-description">{{ item.description }}</p>
                <p class="menu-item-price">{{ item.price | money }}</p>
                <button
                  class="add-to-cart-button"
                  data-item-id="{{ item.id }}"
                  data-item-title="{{ item.title }}"
                  data-item-price="{{ item.price }}"
                  onclick="addToCart('{{ item.id }}', '{{ item.title }}', {{ item.price }})"
                >
                  {{ 'menu.add_to_cart' | t }}
                </button>
              </div>
            </div>
          {% endfor %}
        </div>
      </div>
    {% endfor %}
  </div>

  <div id="cart-summary" class="cart-summary">
    <h3>{{ 'order.items' | t }}</h3>
    <div id="cart-items"></div>
    <div id="cart-total"></div>
    <button id="checkout-button" class="checkout-button" onclick="goToCheckout()">
      {{ 'menu.checkout' | t }}
    </button>
  </div>
</div>

<script>
  let cart = [];

  function addToCart(itemId, itemTitle, itemPrice) {
    // Check if item already in cart
    const existingItemIndex = cart.findIndex(item => item.id === itemId);

    if (existingItemIndex >= 0) {
      // Increment quantity
      cart[existingItemIndex].quantity += 1;
    } else {
      // Add new item
      cart.push({
        id: itemId,
        title: itemTitle,
        price: itemPrice,
        quantity: 1
      });
    }

    // Save cart to localStorage
    localStorage.setItem('cart', JSON.stringify(cart));

    // Update cart display
    updateCartDisplay();
  }

  function updateCartDisplay() {
    const cartItemsElement = document.getElementById('cart-items');
    const cartTotalElement = document.getElementById('cart-total');

    // Clear current display
    cartItemsElement.innerHTML = '';

    if (cart.length === 0) {
      cartItemsElement.innerHTML = `<p class="empty-cart">${window.theme.translations.menu.empty_cart}</p>`;
      document.getElementById('checkout-button').style.display = 'none';
      return;
    }

    // Show checkout button
    document.getElementById('checkout-button').style.display = 'block';

    // Calculate total
    let total = 0;

    // Add each cart item to display
    cart.forEach(item => {
      const itemTotal = item.price * item.quantity;
      total += itemTotal;

      const itemElement = document.createElement('div');
      itemElement.className = 'cart-item';
      itemElement.innerHTML = `
        <span class="cart-item-title">${item.title}</span>
        <span class="cart-item-quantity">x${item.quantity}</span>
        <span class="cart-item-price">${formatMoney(itemTotal)}</span>
        <button class="remove-item" onclick="removeItem('${item.id}')">Ã—</button>
      `;

      cartItemsElement.appendChild(itemElement);
    });

    // Update total
    cartTotalElement.innerHTML = `
      <div class="cart-total-row">
        <span>${window.theme.translations.order.total}</span>
        <span>${formatMoney(total)}</span>
      </div>
    `;
  }

  function removeItem(itemId) {
    cart = cart.filter(item => item.id !== itemId);
    localStorage.setItem('cart', JSON.stringify(cart));
    updateCartDisplay();
  }

  function formatMoney(amount) {
    return (amount / 100).toFixed(2);
  }

  function goToCheckout() {
    // Save current cart to localStorage for checkout page
    localStorage.setItem('cart', JSON.stringify(cart));
    window.location.href = '/pages/checkout';
  }

  // Load cart from localStorage on page load
  document.addEventListener('DOMContentLoaded', function() {
    const savedCart = localStorage.getItem('cart');
    if (savedCart) {
      try {
        cart = JSON.parse(savedCart);
        updateCartDisplay();
      } catch (e) {
        console.error('Error loading cart:', e);
        cart = [];
      }
    }
  });
</script>

<style>
  .menu-display {
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
  }

  .menu-categories {
    margin-bottom: 30px;
  }

  .menu-category {
    margin-bottom: 40px;
  }

  .menu-category h3 {
    border-bottom: 1px solid #ddd;
    padding-bottom: 10px;
    margin-bottom: 20px;
    font-size: 22px;
  }

  .menu-items {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    gap: 20px;
  }

  .menu-item {
    border: 1px solid #eee;
    border-radius: 8px;
    overflow: hidden;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
  }

  .menu-item:hover {
    transform: translateY(-5px);
    box-shadow: 0 5px 15px rgba(0,0,0,0.1);
  }

  .menu-item-image img {
    width: 100%;
    height: 180px;
    object-fit: cover;
  }

  .menu-item-details {
    padding: 15px;
  }

  .menu-item-details h4 {
    margin-top: 0;
    font-size: 18px;
  }

  .menu-item-description {
    color: #666;
    font-size: 14px;
    margin-bottom: 10px;
  }

  .menu-item-price {
    font-weight: bold;
    font-size: 16px;
    margin-bottom: 10px;
  }

  .add-to-cart-button {
    background-color: #4a4a4a;
    color: white;
    border: none;
    padding: 8px 12px;
    border-radius: 4px;
    cursor: pointer;
  }

  .add-to-cart-button:hover {
    background-color: #333;
  }

  .cart-summary {
    position: sticky;
    top: 20px;
    background: #f9f9f9;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 0 10px rgba(0,0,0,0.1);
    margin-top: 30px;
  }

  .cart-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 10px 0;
    border-bottom: 1px solid #eee;
  }

  .remove-item {
    background: none;
    border: none;
    color: #999;
    font-size: 18px;
    cursor: pointer;
  }

  .cart-total-row {
    display: flex;
    justify-content: space-between;
    font-weight: bold;
    margin-top: 15px;
    padding-top: 15px;
    border-top: 2px solid #ddd;
  }

  .checkout-button {
    display: block;
    width: 100%;
    padding: 12px;
    background-color: #4a4a4a;
    color: white;
    border: none;
    border-radius: 4px;
    font-size: 16px;
    margin-top: 20px;
    cursor: pointer;
  }

  .checkout-button:hover {
    background-color: #333;
  }

  .empty-cart {
    text-align: center;
    color: #999;
    padding: 20px 0;
  }

  @media (min-width: 768px) {
    .menu-display {
      display: grid;
      grid-template-columns: 7fr 3fr;
      gap: 30px;
    }

    .cart-summary {
      margin-top: 0;
    }
  }
</style>
